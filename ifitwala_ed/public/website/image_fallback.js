// image_fallback.js


// image_fallback.js

/**
 * Image fallback loader for the Ifitwala Ed site
 * - carousel: hero → medium → card → original
 * - card:     card → original
 *
 * Relies on:
 *   fallback attribute: "carousel" or "card"
 *   data-src-* attributes generated by smart_image macro
 */

document.addEventListener("DOMContentLoaded", () => {
  document.querySelectorAll("img[fallback]").forEach((img) => {
    const strategy = img.getAttribute("fallback");
    const initial  = img.getAttribute("src");

    // gather every possible variant URL (may be undefined)
    const urls = {
      hero:     img.dataset.srcHero,
      medium:   img.dataset.srcMedium,
      card:     img.dataset.srcCard,
      original: img.dataset.srcOriginal
    };

    // build the chain in the exact order you want
    const chain = (strategy === "carousel")
      ? [ initial, urls.hero, urls.medium, urls.card, urls.original ]
      : [ initial, urls.card, urls.original ];

    // drop any missing entries
    const sources = chain.filter(Boolean);
    let idx = 0;

    // once it finally loads, add the ".loaded" class for your CSS transitions
    img.addEventListener("load", () => {
      img.classList.add("loaded");
    });

    // on error, step to the next URL in the chain
    img.addEventListener("error", function onError() {
      idx++;
      if (idx < sources.length) {
        console.warn(`[Fallback][${strategy}] trying`, sources[idx]);
        img.src = sources[idx];
      } else {
        console.error(`[Fallback][${strategy}] all sources failed for`, img);
        img.removeEventListener("error", onError);
      }
    });
  });
});





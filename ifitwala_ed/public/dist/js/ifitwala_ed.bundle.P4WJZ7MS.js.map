{
  "version": 3,
  "sources": ["../../../../../apps/ifitwala_ed/ifitwala_ed/public/js/utils.js", "../../../../../apps/ifitwala_ed/ifitwala_ed/public/js/queries.js", "../../../../../apps/ifitwala_ed/ifitwala_ed/public/js/initial_setup.js"],
  "sourcesContent": ["// Copyright (c) 2025, Fran\u00E7ois de Ryckel and contributors\n// For license information, please see license.txt\n\n\nfrappe.provide(\"ifitwala_ed.utils\");\n\n$.extend(ifitwala_ed.utils, { \n  \n  get_tree_options: function (option) {\n    // get valid options for tree based on user permission & locals dict\n    let unscrub_option = frappe.model.unscrub(option);\n    let user_permission = frappe.defaults.get_user_permissions();\n    let options;\n\n    if (user_permission && user_permission[unscrub_option]) {\n      options = user_permission[unscrub_option].map((perm) => perm.doc);\n    } else {\n      options = $.map(locals[`:${unscrub_option}`], function (c) {\n        return c.name;\n      }).sort();\n    }\n\n    // filter unique values, as there may be multiple user permissions for any value\n    return options.filter((value, index, self) => self.indexOf(value) === index);\n  },\n\n  get_tree_default: function (option) {\n    // set default for a field based on user permission\n    let options = this.get_tree_options(option);\n    if (options.includes(frappe.defaults.get_default(option))) {\n      return frappe.defaults.get_default(option);\n    } else {\n      return options[0];\n    }\n  },\n});\n\nfrappe.form.link_formatters[\"Employee\"] = function (value, doc, df) {\n\treturn add_link_title(value, doc, df, \"employee_full_name\");\n};\n\n/**\n * Add a title to a link value based on the provided document and field information.\n *\n * @param {string} value - The value to add a link title to.\n * @param {Object} doc - The document object.\n * @param {Object} df - The field object.\n * @param {string} title_field - The field name for the title.\n * @returns {string} - The link value with the added title.\n */\nfunction add_link_title(value, doc, df, title_field) {\n\tif (doc && value && doc[title_field] && doc[title_field] !== value && doc[df.fieldname] === value) {\n\t\treturn value + \": \" + doc[title_field];\n\t} else if (!value && doc.doctype && doc[title_field]) {\n\t\treturn doc[title_field];\n\t} else {\n\t\treturn value;\n\t}\n}\n", "// Copyright (c) 2025, Fran\u00E7ois de Ryckel and contributors\n// For license information, please see license.txt\n\n// searches for enabled users\nfrappe.provide(\"ifitwala_ed.queries\");\n\n$.extend(ifitwala_ed.queries, {\n\tuser: function () {\n\t\treturn { query: \"frappe.core.doctype.user.user.user_query\" };\n\t},\n\n\t//task: function () {\n\t//\treturn { query: \"erpnext.projects.utils.query_task\" };\n\t//},\n\n\tcontact_query: function (doc) {\n\t\tif (frappe.dynamic_link) {\n\t\t\tif (!doc[frappe.dynamic_link.fieldname]) {\n\t\t\t\tcur_frm.scroll_to_field(frappe.dynamic_link.fieldname);\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: __(\"Please set {0} first.\", [\n\t\t\t\t\t\t__(frappe.meta.get_label(doc.doctype, frappe.dynamic_link.fieldname, doc.name)),\n\t\t\t\t\t]),\n\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tquery: \"frappe.contacts.doctype.contact.contact.contact_query\",\n\t\t\t\tfilters: {\n\t\t\t\t\tlink_doctype: frappe.dynamic_link.doctype,\n\t\t\t\t\tlink_name: doc[frappe.dynamic_link.fieldname],\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t},\n\n\torganization_contact_query: function (doc) {\n\t\tif (!doc.organization) {\n\t\t\tfrappe.throw(__(\"Please set {0}\", [__(frappe.meta.get_label(doc.doctype, \"organization\", doc.name))]));\n\t\t}\n\n\t\treturn {\n\t\t\tquery: \"frappe.contacts.doctype.contact.contact.contact_query\",\n\t\t\tfilters: { link_doctype: \"Organization\", link_name: doc.organization },\n\t\t};\n\t},\n\n\taddress_query: function (doc) {\n\t\tif (frappe.dynamic_link) {\n\t\t\tif (!doc[frappe.dynamic_link.fieldname]) {\n\t\t\t\tcur_frm.scroll_to_field(frappe.dynamic_link.fieldname);\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: __(\"Please set {0} first.\", [\n\t\t\t\t\t\t__(frappe.meta.get_label(doc.doctype, frappe.dynamic_link.fieldname, doc.name)),\n\t\t\t\t\t]),\n\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tquery: \"frappe.contacts.doctype.address.address.address_query\",\n\t\t\t\tfilters: {\n\t\t\t\t\tlink_doctype: frappe.dynamic_link.doctype,\n\t\t\t\t\tlink_name: doc[frappe.dynamic_link.fieldname],\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t},\n\n\torganization_address_query: function (doc) {\n\t\tif (!doc.organization) {\n\t\t\tcur_frm.scroll_to_field(\"organization\");\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Please set {0} first.\", [\n\t\t\t\t\t__(frappe.meta.get_label(doc.doctype, \"organization\", doc.name)),\n\t\t\t\t]),\n\t\t\t\tindicator: \"orange\",\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tquery: \"frappe.contacts.doctype.address.address.address_query\",\n\t\t\tfilters: { link_doctype: \"Organization\", link_name: doc.organization },\n\t\t};\n\t},\n\n\tnot_a_group_filter: function () {\n\t\treturn { filters: { is_group: 0 } };\n\t},\n\n\temployee: function () {\n\t\treturn { query: \"ifitwala_ed.controllers.queries.employee_query\" };\n\t},\n\n\tlocation: function (doc) {\n\t\treturn {\n\t\t\tfilters: [\n\t\t\t\t[\"Location\", \"organization\", \"in\", [\"\", cstr(doc.organization)]],\n\t\t\t\t[\"Location\", \"is_group\", \"=\", 0],\n\t\t\t],\n\t\t};\n\t},\n});\n\nifitwala_ed.queries.setup_queries = function (frm, options, query_fn) {\n\tvar me = this;\n\tvar set_query = function (doctype, parentfield) {\n\t\tvar link_fields = frappe.meta.get_docfields(doctype, frm.doc.name, {\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: options,\n\t\t});\n\t\t$.each(link_fields, function (i, df) {\n\t\t\tif (parentfield) {\n\t\t\t\tfrm.set_query(df.fieldname, parentfield, query_fn);\n\t\t\t} else {\n\t\t\t\tfrm.set_query(df.fieldname, query_fn);\n\t\t\t}\n\t\t});\n\t};\n\n\tset_query(frm.doc.doctype);\n\n\t// warehouse field in tables\n\t$.each(\n\t\tfrappe.meta.get_docfields(frm.doc.doctype, frm.doc.name, { fieldtype: \"Table\" }),\n\t\tfunction (i, df) {\n\t\t\tset_query(df.options, df.fieldname);\n\t\t}\n\t);\n};\n\n", "// Copyright (c) 2025, Fran\u00E7ois de Ryckel and contributors\n// For license information, please see license.txt\n\nfrappe.after_ajax(() => {\n  frappe.call('ifitwala_ed.setup.initial_setup.is_setup_done')\n    .then(r => {\n      if (r.message) return;  // already set up\n\n      // Prompt fields\n      const fields = [\n        {fieldtype:'Data', label:'Organization Name', fieldname:'org_name', reqd:1},\n        {fieldtype:'Data', label:'Organization Abbreviation', fieldname:'org_abbr', reqd:1},\n        {fieldtype:'Section Break'},\n        {fieldtype:'Data', label:'Top School Name', fieldname:'school_name', reqd:1},\n        {fieldtype:'Data', label:'Top School Abbreviation', fieldname:'school_abbr', reqd:1},\n      ];\n\n      frappe.prompt(fields, (values) => {\n        frappe.call({\n          method:'ifitwala_ed.setup.initial_setup.complete_initial_setup',\n          args: values,\n          callback: () => {\n            frappe.show_alert(__('Initial setup completed!'), 5);\n            setTimeout(() => location.reload(), 1200);\n          }\n        });\n      }, __(\"Ifitwala\u00A0Ed \u2013\u00A0initial setup\"), __('Create'));\n    });\n});\n"],
  "mappings": ";;AAIA,SAAO,QAAQ,mBAAmB;AAElC,IAAE,OAAO,YAAY,OAAO;AAAA,IAE1B,kBAAkB,SAAU,QAAQ;AAElC,UAAI,iBAAiB,OAAO,MAAM,QAAQ,MAAM;AAChD,UAAI,kBAAkB,OAAO,SAAS,qBAAqB;AAC3D,UAAI;AAEJ,UAAI,mBAAmB,gBAAgB,iBAAiB;AACtD,kBAAU,gBAAgB,gBAAgB,IAAI,CAAC,SAAS,KAAK,GAAG;AAAA,MAClE,OAAO;AACL,kBAAU,EAAE,IAAI,OAAO,IAAI,mBAAmB,SAAU,GAAG;AACzD,iBAAO,EAAE;AAAA,QACX,CAAC,EAAE,KAAK;AAAA,MACV;AAGA,aAAO,QAAQ,OAAO,CAAC,OAAO,OAAO,SAAS,KAAK,QAAQ,KAAK,MAAM,KAAK;AAAA,IAC7E;AAAA,IAEA,kBAAkB,SAAU,QAAQ;AAElC,UAAI,UAAU,KAAK,iBAAiB,MAAM;AAC1C,UAAI,QAAQ,SAAS,OAAO,SAAS,YAAY,MAAM,CAAC,GAAG;AACzD,eAAO,OAAO,SAAS,YAAY,MAAM;AAAA,MAC3C,OAAO;AACL,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO,KAAK,gBAAgB,cAAc,SAAU,OAAO,KAAK,IAAI;AACnE,WAAO,eAAe,OAAO,KAAK,IAAI,oBAAoB;AAAA,EAC3D;AAWA,WAAS,eAAe,OAAO,KAAK,IAAI,aAAa;AACpD,QAAI,OAAO,SAAS,IAAI,gBAAgB,IAAI,iBAAiB,SAAS,IAAI,GAAG,eAAe,OAAO;AAClG,aAAO,QAAQ,OAAO,IAAI;AAAA,IAC3B,WAAW,CAAC,SAAS,IAAI,WAAW,IAAI,cAAc;AACrD,aAAO,IAAI;AAAA,IACZ,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;;;ACtDA,SAAO,QAAQ,qBAAqB;AAEpC,IAAE,OAAO,YAAY,SAAS;AAAA,IAC7B,MAAM,WAAY;AACjB,aAAO,EAAE,OAAO,2CAA2C;AAAA,IAC5D;AAAA,IAMA,eAAe,SAAU,KAAK;AAC7B,UAAI,OAAO,cAAc;AACxB,YAAI,CAAC,IAAI,OAAO,aAAa,YAAY;AACxC,kBAAQ,gBAAgB,OAAO,aAAa,SAAS;AACrD,iBAAO,WAAW;AAAA,YACjB,SAAS,GAAG,yBAAyB;AAAA,cACpC,GAAG,OAAO,KAAK,UAAU,IAAI,SAAS,OAAO,aAAa,WAAW,IAAI,IAAI,CAAC;AAAA,YAC/E,CAAC;AAAA,YACD,WAAW;AAAA,UACZ,CAAC;AAAA,QACF;AAEA,eAAO;AAAA,UACN,OAAO;AAAA,UACP,SAAS;AAAA,YACR,cAAc,OAAO,aAAa;AAAA,YAClC,WAAW,IAAI,OAAO,aAAa;AAAA,UACpC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IAEA,4BAA4B,SAAU,KAAK;AAC1C,UAAI,CAAC,IAAI,cAAc;AACtB,eAAO,MAAM,GAAG,kBAAkB,CAAC,GAAG,OAAO,KAAK,UAAU,IAAI,SAAS,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAAA,MACtG;AAEA,aAAO;AAAA,QACN,OAAO;AAAA,QACP,SAAS,EAAE,cAAc,gBAAgB,WAAW,IAAI,aAAa;AAAA,MACtE;AAAA,IACD;AAAA,IAEA,eAAe,SAAU,KAAK;AAC7B,UAAI,OAAO,cAAc;AACxB,YAAI,CAAC,IAAI,OAAO,aAAa,YAAY;AACxC,kBAAQ,gBAAgB,OAAO,aAAa,SAAS;AACrD,iBAAO,WAAW;AAAA,YACjB,SAAS,GAAG,yBAAyB;AAAA,cACpC,GAAG,OAAO,KAAK,UAAU,IAAI,SAAS,OAAO,aAAa,WAAW,IAAI,IAAI,CAAC;AAAA,YAC/E,CAAC;AAAA,YACD,WAAW;AAAA,UACZ,CAAC;AAAA,QACF;AAEA,eAAO;AAAA,UACN,OAAO;AAAA,UACP,SAAS;AAAA,YACR,cAAc,OAAO,aAAa;AAAA,YAClC,WAAW,IAAI,OAAO,aAAa;AAAA,UACpC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IAEA,4BAA4B,SAAU,KAAK;AAC1C,UAAI,CAAC,IAAI,cAAc;AACtB,gBAAQ,gBAAgB,cAAc;AACtC,eAAO,WAAW;AAAA,UACjB,SAAS,GAAG,yBAAyB;AAAA,YACpC,GAAG,OAAO,KAAK,UAAU,IAAI,SAAS,gBAAgB,IAAI,IAAI,CAAC;AAAA,UAChE,CAAC;AAAA,UACD,WAAW;AAAA,QACZ,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,QACN,OAAO;AAAA,QACP,SAAS,EAAE,cAAc,gBAAgB,WAAW,IAAI,aAAa;AAAA,MACtE;AAAA,IACD;AAAA,IAEA,oBAAoB,WAAY;AAC/B,aAAO,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE;AAAA,IACnC;AAAA,IAEA,UAAU,WAAY;AACrB,aAAO,EAAE,OAAO,iDAAiD;AAAA,IAClE;AAAA,IAEA,UAAU,SAAU,KAAK;AACxB,aAAO;AAAA,QACN,SAAS;AAAA,UACR,CAAC,YAAY,gBAAgB,MAAM,CAAC,IAAI,KAAK,IAAI,YAAY,CAAC,CAAC;AAAA,UAC/D,CAAC,YAAY,YAAY,KAAK,CAAC;AAAA,QAChC;AAAA,MACD;AAAA,IACD;AAAA,EACD,CAAC;AAED,cAAY,QAAQ,gBAAgB,SAAU,KAAK,SAAS,UAAU;AACrE,QAAI,KAAK;AACT,QAAI,YAAY,SAAU,SAAS,aAAa;AAC/C,UAAI,cAAc,OAAO,KAAK,cAAc,SAAS,IAAI,IAAI,MAAM;AAAA,QAClE,WAAW;AAAA,QACX;AAAA,MACD,CAAC;AACD,QAAE,KAAK,aAAa,SAAU,GAAG,IAAI;AACpC,YAAI,aAAa;AAChB,cAAI,UAAU,GAAG,WAAW,aAAa,QAAQ;AAAA,QAClD,OAAO;AACN,cAAI,UAAU,GAAG,WAAW,QAAQ;AAAA,QACrC;AAAA,MACD,CAAC;AAAA,IACF;AAEA,cAAU,IAAI,IAAI,OAAO;AAGzB,MAAE;AAAA,MACD,OAAO,KAAK,cAAc,IAAI,IAAI,SAAS,IAAI,IAAI,MAAM,EAAE,WAAW,QAAQ,CAAC;AAAA,MAC/E,SAAU,GAAG,IAAI;AAChB,kBAAU,GAAG,SAAS,GAAG,SAAS;AAAA,MACnC;AAAA,IACD;AAAA,EACD;;;AC/HA,SAAO,WAAW,MAAM;AACtB,WAAO,KAAK,+CAA+C,EACxD,KAAK,OAAK;AACT,UAAI,EAAE;AAAS;AAGf,YAAM,SAAS;AAAA,QACb,EAAC,WAAU,QAAQ,OAAM,qBAAqB,WAAU,YAAY,MAAK,EAAC;AAAA,QAC1E,EAAC,WAAU,QAAQ,OAAM,6BAA6B,WAAU,YAAY,MAAK,EAAC;AAAA,QAClF,EAAC,WAAU,gBAAe;AAAA,QAC1B,EAAC,WAAU,QAAQ,OAAM,mBAAmB,WAAU,eAAe,MAAK,EAAC;AAAA,QAC3E,EAAC,WAAU,QAAQ,OAAM,2BAA2B,WAAU,eAAe,MAAK,EAAC;AAAA,MACrF;AAEA,aAAO,OAAO,QAAQ,CAAC,WAAW;AAChC,eAAO,KAAK;AAAA,UACV,QAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU,MAAM;AACd,mBAAO,WAAW,GAAG,0BAA0B,GAAG,CAAC;AACnD,uBAAW,MAAM,SAAS,OAAO,GAAG,IAAI;AAAA,UAC1C;AAAA,QACF,CAAC;AAAA,MACH,GAAG,GAAG,wCAA6B,GAAG,GAAG,QAAQ,CAAC;AAAA,IACpD,CAAC;AAAA,EACL,CAAC;",
  "names": []
}
